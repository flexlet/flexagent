// Code generated by go-swagger; DO NOT EDIT.

package crypto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UpdateVaultOKCode is the HTTP code returned for type UpdateVaultOK
const UpdateVaultOKCode int = 200

/*UpdateVaultOK Update vault succeeded

swagger:response updateVaultOK
*/
type UpdateVaultOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateVaultOK creates UpdateVaultOK with default headers values
func NewUpdateVaultOK() *UpdateVaultOK {

	return &UpdateVaultOK{}
}

// WithPayload adds the payload to the update vault o k response
func (o *UpdateVaultOK) WithPayload(payload string) *UpdateVaultOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault o k response
func (o *UpdateVaultOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateVaultBadRequestCode is the HTTP code returned for type UpdateVaultBadRequest
const UpdateVaultBadRequestCode int = 400

/*UpdateVaultBadRequest update vault bad request

swagger:response updateVaultBadRequest
*/
type UpdateVaultBadRequest struct {

	/*
	  In: Body
	*/
	Payload *UpdateVaultBadRequestBody `json:"body,omitempty"`
}

// NewUpdateVaultBadRequest creates UpdateVaultBadRequest with default headers values
func NewUpdateVaultBadRequest() *UpdateVaultBadRequest {

	return &UpdateVaultBadRequest{}
}

// WithPayload adds the payload to the update vault bad request response
func (o *UpdateVaultBadRequest) WithPayload(payload *UpdateVaultBadRequestBody) *UpdateVaultBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault bad request response
func (o *UpdateVaultBadRequest) SetPayload(payload *UpdateVaultBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVaultUnauthorizedCode is the HTTP code returned for type UpdateVaultUnauthorized
const UpdateVaultUnauthorizedCode int = 401

/*UpdateVaultUnauthorized update vault unauthorized

swagger:response updateVaultUnauthorized
*/
type UpdateVaultUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateVaultUnauthorized creates UpdateVaultUnauthorized with default headers values
func NewUpdateVaultUnauthorized() *UpdateVaultUnauthorized {

	return &UpdateVaultUnauthorized{}
}

// WithPayload adds the payload to the update vault unauthorized response
func (o *UpdateVaultUnauthorized) WithPayload(payload interface{}) *UpdateVaultUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault unauthorized response
func (o *UpdateVaultUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateVaultForbiddenCode is the HTTP code returned for type UpdateVaultForbidden
const UpdateVaultForbiddenCode int = 403

/*UpdateVaultForbidden update vault forbidden

swagger:response updateVaultForbidden
*/
type UpdateVaultForbidden struct {

	/*
	  In: Body
	*/
	Payload *UpdateVaultForbiddenBody `json:"body,omitempty"`
}

// NewUpdateVaultForbidden creates UpdateVaultForbidden with default headers values
func NewUpdateVaultForbidden() *UpdateVaultForbidden {

	return &UpdateVaultForbidden{}
}

// WithPayload adds the payload to the update vault forbidden response
func (o *UpdateVaultForbidden) WithPayload(payload *UpdateVaultForbiddenBody) *UpdateVaultForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault forbidden response
func (o *UpdateVaultForbidden) SetPayload(payload *UpdateVaultForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVaultNotFoundCode is the HTTP code returned for type UpdateVaultNotFound
const UpdateVaultNotFoundCode int = 404

/*UpdateVaultNotFound update vault not found

swagger:response updateVaultNotFound
*/
type UpdateVaultNotFound struct {

	/*
	  In: Body
	*/
	Payload *UpdateVaultNotFoundBody `json:"body,omitempty"`
}

// NewUpdateVaultNotFound creates UpdateVaultNotFound with default headers values
func NewUpdateVaultNotFound() *UpdateVaultNotFound {

	return &UpdateVaultNotFound{}
}

// WithPayload adds the payload to the update vault not found response
func (o *UpdateVaultNotFound) WithPayload(payload *UpdateVaultNotFoundBody) *UpdateVaultNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault not found response
func (o *UpdateVaultNotFound) SetPayload(payload *UpdateVaultNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateVaultInternalServerErrorCode is the HTTP code returned for type UpdateVaultInternalServerError
const UpdateVaultInternalServerErrorCode int = 500

/*UpdateVaultInternalServerError update vault internal server error

swagger:response updateVaultInternalServerError
*/
type UpdateVaultInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateVaultInternalServerError creates UpdateVaultInternalServerError with default headers values
func NewUpdateVaultInternalServerError() *UpdateVaultInternalServerError {

	return &UpdateVaultInternalServerError{}
}

// WithPayload adds the payload to the update vault internal server error response
func (o *UpdateVaultInternalServerError) WithPayload(payload interface{}) *UpdateVaultInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update vault internal server error response
func (o *UpdateVaultInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateVaultInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
