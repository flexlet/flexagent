// Code generated by go-swagger; DO NOT EDIT.

package crypto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// QueryVaultOKCode is the HTTP code returned for type QueryVaultOK
const QueryVaultOKCode int = 200

/*QueryVaultOK Get vault succeed

swagger:response queryVaultOK
*/
type QueryVaultOK struct {

	/*
	  In: Body
	*/
	Payload map[string]string `json:"body,omitempty"`
}

// NewQueryVaultOK creates QueryVaultOK with default headers values
func NewQueryVaultOK() *QueryVaultOK {

	return &QueryVaultOK{}
}

// WithPayload adds the payload to the query vault o k response
func (o *QueryVaultOK) WithPayload(payload map[string]string) *QueryVaultOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault o k response
func (o *QueryVaultOK) SetPayload(payload map[string]string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty map
		payload = make(map[string]string, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// QueryVaultBadRequestCode is the HTTP code returned for type QueryVaultBadRequest
const QueryVaultBadRequestCode int = 400

/*QueryVaultBadRequest query vault bad request

swagger:response queryVaultBadRequest
*/
type QueryVaultBadRequest struct {

	/*
	  In: Body
	*/
	Payload *QueryVaultBadRequestBody `json:"body,omitempty"`
}

// NewQueryVaultBadRequest creates QueryVaultBadRequest with default headers values
func NewQueryVaultBadRequest() *QueryVaultBadRequest {

	return &QueryVaultBadRequest{}
}

// WithPayload adds the payload to the query vault bad request response
func (o *QueryVaultBadRequest) WithPayload(payload *QueryVaultBadRequestBody) *QueryVaultBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault bad request response
func (o *QueryVaultBadRequest) SetPayload(payload *QueryVaultBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QueryVaultUnauthorizedCode is the HTTP code returned for type QueryVaultUnauthorized
const QueryVaultUnauthorizedCode int = 401

/*QueryVaultUnauthorized query vault unauthorized

swagger:response queryVaultUnauthorized
*/
type QueryVaultUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewQueryVaultUnauthorized creates QueryVaultUnauthorized with default headers values
func NewQueryVaultUnauthorized() *QueryVaultUnauthorized {

	return &QueryVaultUnauthorized{}
}

// WithPayload adds the payload to the query vault unauthorized response
func (o *QueryVaultUnauthorized) WithPayload(payload interface{}) *QueryVaultUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault unauthorized response
func (o *QueryVaultUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// QueryVaultForbiddenCode is the HTTP code returned for type QueryVaultForbidden
const QueryVaultForbiddenCode int = 403

/*QueryVaultForbidden query vault forbidden

swagger:response queryVaultForbidden
*/
type QueryVaultForbidden struct {

	/*
	  In: Body
	*/
	Payload *QueryVaultForbiddenBody `json:"body,omitempty"`
}

// NewQueryVaultForbidden creates QueryVaultForbidden with default headers values
func NewQueryVaultForbidden() *QueryVaultForbidden {

	return &QueryVaultForbidden{}
}

// WithPayload adds the payload to the query vault forbidden response
func (o *QueryVaultForbidden) WithPayload(payload *QueryVaultForbiddenBody) *QueryVaultForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault forbidden response
func (o *QueryVaultForbidden) SetPayload(payload *QueryVaultForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QueryVaultNotFoundCode is the HTTP code returned for type QueryVaultNotFound
const QueryVaultNotFoundCode int = 404

/*QueryVaultNotFound query vault not found

swagger:response queryVaultNotFound
*/
type QueryVaultNotFound struct {

	/*
	  In: Body
	*/
	Payload *QueryVaultNotFoundBody `json:"body,omitempty"`
}

// NewQueryVaultNotFound creates QueryVaultNotFound with default headers values
func NewQueryVaultNotFound() *QueryVaultNotFound {

	return &QueryVaultNotFound{}
}

// WithPayload adds the payload to the query vault not found response
func (o *QueryVaultNotFound) WithPayload(payload *QueryVaultNotFoundBody) *QueryVaultNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault not found response
func (o *QueryVaultNotFound) SetPayload(payload *QueryVaultNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QueryVaultInternalServerErrorCode is the HTTP code returned for type QueryVaultInternalServerError
const QueryVaultInternalServerErrorCode int = 500

/*QueryVaultInternalServerError query vault internal server error

swagger:response queryVaultInternalServerError
*/
type QueryVaultInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewQueryVaultInternalServerError creates QueryVaultInternalServerError with default headers values
func NewQueryVaultInternalServerError() *QueryVaultInternalServerError {

	return &QueryVaultInternalServerError{}
}

// WithPayload adds the payload to the query vault internal server error response
func (o *QueryVaultInternalServerError) WithPayload(payload interface{}) *QueryVaultInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query vault internal server error response
func (o *QueryVaultInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryVaultInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
