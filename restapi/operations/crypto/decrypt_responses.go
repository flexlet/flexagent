// Code generated by go-swagger; DO NOT EDIT.

package crypto

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"flexagent/models"
)

// DecryptOKCode is the HTTP code returned for type DecryptOK
const DecryptOKCode int = 200

/*DecryptOK Data decrypted

swagger:response decryptOK
*/
type DecryptOK struct {

	/*
	  In: Body
	*/
	Payload *models.CryptoData `json:"body,omitempty"`
}

// NewDecryptOK creates DecryptOK with default headers values
func NewDecryptOK() *DecryptOK {

	return &DecryptOK{}
}

// WithPayload adds the payload to the decrypt o k response
func (o *DecryptOK) WithPayload(payload *models.CryptoData) *DecryptOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt o k response
func (o *DecryptOK) SetPayload(payload *models.CryptoData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DecryptBadRequestCode is the HTTP code returned for type DecryptBadRequest
const DecryptBadRequestCode int = 400

/*DecryptBadRequest decrypt bad request

swagger:response decryptBadRequest
*/
type DecryptBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DecryptBadRequestBody `json:"body,omitempty"`
}

// NewDecryptBadRequest creates DecryptBadRequest with default headers values
func NewDecryptBadRequest() *DecryptBadRequest {

	return &DecryptBadRequest{}
}

// WithPayload adds the payload to the decrypt bad request response
func (o *DecryptBadRequest) WithPayload(payload *DecryptBadRequestBody) *DecryptBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt bad request response
func (o *DecryptBadRequest) SetPayload(payload *DecryptBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DecryptUnauthorizedCode is the HTTP code returned for type DecryptUnauthorized
const DecryptUnauthorizedCode int = 401

/*DecryptUnauthorized decrypt unauthorized

swagger:response decryptUnauthorized
*/
type DecryptUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDecryptUnauthorized creates DecryptUnauthorized with default headers values
func NewDecryptUnauthorized() *DecryptUnauthorized {

	return &DecryptUnauthorized{}
}

// WithPayload adds the payload to the decrypt unauthorized response
func (o *DecryptUnauthorized) WithPayload(payload interface{}) *DecryptUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt unauthorized response
func (o *DecryptUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DecryptForbiddenCode is the HTTP code returned for type DecryptForbidden
const DecryptForbiddenCode int = 403

/*DecryptForbidden decrypt forbidden

swagger:response decryptForbidden
*/
type DecryptForbidden struct {

	/*
	  In: Body
	*/
	Payload *DecryptForbiddenBody `json:"body,omitempty"`
}

// NewDecryptForbidden creates DecryptForbidden with default headers values
func NewDecryptForbidden() *DecryptForbidden {

	return &DecryptForbidden{}
}

// WithPayload adds the payload to the decrypt forbidden response
func (o *DecryptForbidden) WithPayload(payload *DecryptForbiddenBody) *DecryptForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt forbidden response
func (o *DecryptForbidden) SetPayload(payload *DecryptForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DecryptNotFoundCode is the HTTP code returned for type DecryptNotFound
const DecryptNotFoundCode int = 404

/*DecryptNotFound decrypt not found

swagger:response decryptNotFound
*/
type DecryptNotFound struct {

	/*
	  In: Body
	*/
	Payload *DecryptNotFoundBody `json:"body,omitempty"`
}

// NewDecryptNotFound creates DecryptNotFound with default headers values
func NewDecryptNotFound() *DecryptNotFound {

	return &DecryptNotFound{}
}

// WithPayload adds the payload to the decrypt not found response
func (o *DecryptNotFound) WithPayload(payload *DecryptNotFoundBody) *DecryptNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt not found response
func (o *DecryptNotFound) SetPayload(payload *DecryptNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DecryptInternalServerErrorCode is the HTTP code returned for type DecryptInternalServerError
const DecryptInternalServerErrorCode int = 500

/*DecryptInternalServerError decrypt internal server error

swagger:response decryptInternalServerError
*/
type DecryptInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDecryptInternalServerError creates DecryptInternalServerError with default headers values
func NewDecryptInternalServerError() *DecryptInternalServerError {

	return &DecryptInternalServerError{}
}

// WithPayload adds the payload to the decrypt internal server error response
func (o *DecryptInternalServerError) WithPayload(payload interface{}) *DecryptInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the decrypt internal server error response
func (o *DecryptInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DecryptInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
