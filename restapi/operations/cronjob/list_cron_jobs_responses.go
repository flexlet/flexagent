// Code generated by go-swagger; DO NOT EDIT.

package cronjob

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"flexagent/models"
)

// ListCronJobsOKCode is the HTTP code returned for type ListCronJobsOK
const ListCronJobsOKCode int = 200

/*ListCronJobsOK List cronjobs succeeded

swagger:response listCronJobsOK
*/
type ListCronJobsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.CronJob `json:"body,omitempty"`
}

// NewListCronJobsOK creates ListCronJobsOK with default headers values
func NewListCronJobsOK() *ListCronJobsOK {

	return &ListCronJobsOK{}
}

// WithPayload adds the payload to the list cron jobs o k response
func (o *ListCronJobsOK) WithPayload(payload []*models.CronJob) *ListCronJobsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs o k response
func (o *ListCronJobsOK) SetPayload(payload []*models.CronJob) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.CronJob, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListCronJobsBadRequestCode is the HTTP code returned for type ListCronJobsBadRequest
const ListCronJobsBadRequestCode int = 400

/*ListCronJobsBadRequest list cron jobs bad request

swagger:response listCronJobsBadRequest
*/
type ListCronJobsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ListCronJobsBadRequestBody `json:"body,omitempty"`
}

// NewListCronJobsBadRequest creates ListCronJobsBadRequest with default headers values
func NewListCronJobsBadRequest() *ListCronJobsBadRequest {

	return &ListCronJobsBadRequest{}
}

// WithPayload adds the payload to the list cron jobs bad request response
func (o *ListCronJobsBadRequest) WithPayload(payload *ListCronJobsBadRequestBody) *ListCronJobsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs bad request response
func (o *ListCronJobsBadRequest) SetPayload(payload *ListCronJobsBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCronJobsUnauthorizedCode is the HTTP code returned for type ListCronJobsUnauthorized
const ListCronJobsUnauthorizedCode int = 401

/*ListCronJobsUnauthorized list cron jobs unauthorized

swagger:response listCronJobsUnauthorized
*/
type ListCronJobsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListCronJobsUnauthorized creates ListCronJobsUnauthorized with default headers values
func NewListCronJobsUnauthorized() *ListCronJobsUnauthorized {

	return &ListCronJobsUnauthorized{}
}

// WithPayload adds the payload to the list cron jobs unauthorized response
func (o *ListCronJobsUnauthorized) WithPayload(payload interface{}) *ListCronJobsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs unauthorized response
func (o *ListCronJobsUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListCronJobsForbiddenCode is the HTTP code returned for type ListCronJobsForbidden
const ListCronJobsForbiddenCode int = 403

/*ListCronJobsForbidden list cron jobs forbidden

swagger:response listCronJobsForbidden
*/
type ListCronJobsForbidden struct {

	/*
	  In: Body
	*/
	Payload *ListCronJobsForbiddenBody `json:"body,omitempty"`
}

// NewListCronJobsForbidden creates ListCronJobsForbidden with default headers values
func NewListCronJobsForbidden() *ListCronJobsForbidden {

	return &ListCronJobsForbidden{}
}

// WithPayload adds the payload to the list cron jobs forbidden response
func (o *ListCronJobsForbidden) WithPayload(payload *ListCronJobsForbiddenBody) *ListCronJobsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs forbidden response
func (o *ListCronJobsForbidden) SetPayload(payload *ListCronJobsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCronJobsNotFoundCode is the HTTP code returned for type ListCronJobsNotFound
const ListCronJobsNotFoundCode int = 404

/*ListCronJobsNotFound list cron jobs not found

swagger:response listCronJobsNotFound
*/
type ListCronJobsNotFound struct {

	/*
	  In: Body
	*/
	Payload *ListCronJobsNotFoundBody `json:"body,omitempty"`
}

// NewListCronJobsNotFound creates ListCronJobsNotFound with default headers values
func NewListCronJobsNotFound() *ListCronJobsNotFound {

	return &ListCronJobsNotFound{}
}

// WithPayload adds the payload to the list cron jobs not found response
func (o *ListCronJobsNotFound) WithPayload(payload *ListCronJobsNotFoundBody) *ListCronJobsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs not found response
func (o *ListCronJobsNotFound) SetPayload(payload *ListCronJobsNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListCronJobsInternalServerErrorCode is the HTTP code returned for type ListCronJobsInternalServerError
const ListCronJobsInternalServerErrorCode int = 500

/*ListCronJobsInternalServerError list cron jobs internal server error

swagger:response listCronJobsInternalServerError
*/
type ListCronJobsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListCronJobsInternalServerError creates ListCronJobsInternalServerError with default headers values
func NewListCronJobsInternalServerError() *ListCronJobsInternalServerError {

	return &ListCronJobsInternalServerError{}
}

// WithPayload adds the payload to the list cron jobs internal server error response
func (o *ListCronJobsInternalServerError) WithPayload(payload interface{}) *ListCronJobsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list cron jobs internal server error response
func (o *ListCronJobsInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCronJobsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
