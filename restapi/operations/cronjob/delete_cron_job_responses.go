// Code generated by go-swagger; DO NOT EDIT.

package cronjob

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteCronJobOKCode is the HTTP code returned for type DeleteCronJobOK
const DeleteCronJobOKCode int = 200

/*DeleteCronJobOK Delete cronjob succeeded

swagger:response deleteCronJobOK
*/
type DeleteCronJobOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewDeleteCronJobOK creates DeleteCronJobOK with default headers values
func NewDeleteCronJobOK() *DeleteCronJobOK {

	return &DeleteCronJobOK{}
}

// WithPayload adds the payload to the delete cron job o k response
func (o *DeleteCronJobOK) WithPayload(payload string) *DeleteCronJobOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job o k response
func (o *DeleteCronJobOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteCronJobBadRequestCode is the HTTP code returned for type DeleteCronJobBadRequest
const DeleteCronJobBadRequestCode int = 400

/*DeleteCronJobBadRequest delete cron job bad request

swagger:response deleteCronJobBadRequest
*/
type DeleteCronJobBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteCronJobBadRequestBody `json:"body,omitempty"`
}

// NewDeleteCronJobBadRequest creates DeleteCronJobBadRequest with default headers values
func NewDeleteCronJobBadRequest() *DeleteCronJobBadRequest {

	return &DeleteCronJobBadRequest{}
}

// WithPayload adds the payload to the delete cron job bad request response
func (o *DeleteCronJobBadRequest) WithPayload(payload *DeleteCronJobBadRequestBody) *DeleteCronJobBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job bad request response
func (o *DeleteCronJobBadRequest) SetPayload(payload *DeleteCronJobBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCronJobUnauthorizedCode is the HTTP code returned for type DeleteCronJobUnauthorized
const DeleteCronJobUnauthorizedCode int = 401

/*DeleteCronJobUnauthorized delete cron job unauthorized

swagger:response deleteCronJobUnauthorized
*/
type DeleteCronJobUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteCronJobUnauthorized creates DeleteCronJobUnauthorized with default headers values
func NewDeleteCronJobUnauthorized() *DeleteCronJobUnauthorized {

	return &DeleteCronJobUnauthorized{}
}

// WithPayload adds the payload to the delete cron job unauthorized response
func (o *DeleteCronJobUnauthorized) WithPayload(payload interface{}) *DeleteCronJobUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job unauthorized response
func (o *DeleteCronJobUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// DeleteCronJobForbiddenCode is the HTTP code returned for type DeleteCronJobForbidden
const DeleteCronJobForbiddenCode int = 403

/*DeleteCronJobForbidden delete cron job forbidden

swagger:response deleteCronJobForbidden
*/
type DeleteCronJobForbidden struct {

	/*
	  In: Body
	*/
	Payload *DeleteCronJobForbiddenBody `json:"body,omitempty"`
}

// NewDeleteCronJobForbidden creates DeleteCronJobForbidden with default headers values
func NewDeleteCronJobForbidden() *DeleteCronJobForbidden {

	return &DeleteCronJobForbidden{}
}

// WithPayload adds the payload to the delete cron job forbidden response
func (o *DeleteCronJobForbidden) WithPayload(payload *DeleteCronJobForbiddenBody) *DeleteCronJobForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job forbidden response
func (o *DeleteCronJobForbidden) SetPayload(payload *DeleteCronJobForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCronJobNotFoundCode is the HTTP code returned for type DeleteCronJobNotFound
const DeleteCronJobNotFoundCode int = 404

/*DeleteCronJobNotFound delete cron job not found

swagger:response deleteCronJobNotFound
*/
type DeleteCronJobNotFound struct {

	/*
	  In: Body
	*/
	Payload *DeleteCronJobNotFoundBody `json:"body,omitempty"`
}

// NewDeleteCronJobNotFound creates DeleteCronJobNotFound with default headers values
func NewDeleteCronJobNotFound() *DeleteCronJobNotFound {

	return &DeleteCronJobNotFound{}
}

// WithPayload adds the payload to the delete cron job not found response
func (o *DeleteCronJobNotFound) WithPayload(payload *DeleteCronJobNotFoundBody) *DeleteCronJobNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job not found response
func (o *DeleteCronJobNotFound) SetPayload(payload *DeleteCronJobNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCronJobInternalServerErrorCode is the HTTP code returned for type DeleteCronJobInternalServerError
const DeleteCronJobInternalServerErrorCode int = 500

/*DeleteCronJobInternalServerError delete cron job internal server error

swagger:response deleteCronJobInternalServerError
*/
type DeleteCronJobInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewDeleteCronJobInternalServerError creates DeleteCronJobInternalServerError with default headers values
func NewDeleteCronJobInternalServerError() *DeleteCronJobInternalServerError {

	return &DeleteCronJobInternalServerError{}
}

// WithPayload adds the payload to the delete cron job internal server error response
func (o *DeleteCronJobInternalServerError) WithPayload(payload interface{}) *DeleteCronJobInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cron job internal server error response
func (o *DeleteCronJobInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCronJobInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
