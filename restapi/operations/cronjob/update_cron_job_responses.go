// Code generated by go-swagger; DO NOT EDIT.

package cronjob

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"flexagent/models"
)

// UpdateCronJobOKCode is the HTTP code returned for type UpdateCronJobOK
const UpdateCronJobOKCode int = 200

/*UpdateCronJobOK Update cronjob succeeded

swagger:response updateCronJobOK
*/
type UpdateCronJobOK struct {

	/*
	  In: Body
	*/
	Payload *models.CronJob `json:"body,omitempty"`
}

// NewUpdateCronJobOK creates UpdateCronJobOK with default headers values
func NewUpdateCronJobOK() *UpdateCronJobOK {

	return &UpdateCronJobOK{}
}

// WithPayload adds the payload to the update cron job o k response
func (o *UpdateCronJobOK) WithPayload(payload *models.CronJob) *UpdateCronJobOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job o k response
func (o *UpdateCronJobOK) SetPayload(payload *models.CronJob) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCronJobBadRequestCode is the HTTP code returned for type UpdateCronJobBadRequest
const UpdateCronJobBadRequestCode int = 400

/*UpdateCronJobBadRequest update cron job bad request

swagger:response updateCronJobBadRequest
*/
type UpdateCronJobBadRequest struct {

	/*
	  In: Body
	*/
	Payload *UpdateCronJobBadRequestBody `json:"body,omitempty"`
}

// NewUpdateCronJobBadRequest creates UpdateCronJobBadRequest with default headers values
func NewUpdateCronJobBadRequest() *UpdateCronJobBadRequest {

	return &UpdateCronJobBadRequest{}
}

// WithPayload adds the payload to the update cron job bad request response
func (o *UpdateCronJobBadRequest) WithPayload(payload *UpdateCronJobBadRequestBody) *UpdateCronJobBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job bad request response
func (o *UpdateCronJobBadRequest) SetPayload(payload *UpdateCronJobBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCronJobUnauthorizedCode is the HTTP code returned for type UpdateCronJobUnauthorized
const UpdateCronJobUnauthorizedCode int = 401

/*UpdateCronJobUnauthorized update cron job unauthorized

swagger:response updateCronJobUnauthorized
*/
type UpdateCronJobUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCronJobUnauthorized creates UpdateCronJobUnauthorized with default headers values
func NewUpdateCronJobUnauthorized() *UpdateCronJobUnauthorized {

	return &UpdateCronJobUnauthorized{}
}

// WithPayload adds the payload to the update cron job unauthorized response
func (o *UpdateCronJobUnauthorized) WithPayload(payload interface{}) *UpdateCronJobUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job unauthorized response
func (o *UpdateCronJobUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UpdateCronJobForbiddenCode is the HTTP code returned for type UpdateCronJobForbidden
const UpdateCronJobForbiddenCode int = 403

/*UpdateCronJobForbidden update cron job forbidden

swagger:response updateCronJobForbidden
*/
type UpdateCronJobForbidden struct {

	/*
	  In: Body
	*/
	Payload *UpdateCronJobForbiddenBody `json:"body,omitempty"`
}

// NewUpdateCronJobForbidden creates UpdateCronJobForbidden with default headers values
func NewUpdateCronJobForbidden() *UpdateCronJobForbidden {

	return &UpdateCronJobForbidden{}
}

// WithPayload adds the payload to the update cron job forbidden response
func (o *UpdateCronJobForbidden) WithPayload(payload *UpdateCronJobForbiddenBody) *UpdateCronJobForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job forbidden response
func (o *UpdateCronJobForbidden) SetPayload(payload *UpdateCronJobForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCronJobNotFoundCode is the HTTP code returned for type UpdateCronJobNotFound
const UpdateCronJobNotFoundCode int = 404

/*UpdateCronJobNotFound update cron job not found

swagger:response updateCronJobNotFound
*/
type UpdateCronJobNotFound struct {

	/*
	  In: Body
	*/
	Payload *UpdateCronJobNotFoundBody `json:"body,omitempty"`
}

// NewUpdateCronJobNotFound creates UpdateCronJobNotFound with default headers values
func NewUpdateCronJobNotFound() *UpdateCronJobNotFound {

	return &UpdateCronJobNotFound{}
}

// WithPayload adds the payload to the update cron job not found response
func (o *UpdateCronJobNotFound) WithPayload(payload *UpdateCronJobNotFoundBody) *UpdateCronJobNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job not found response
func (o *UpdateCronJobNotFound) SetPayload(payload *UpdateCronJobNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCronJobInternalServerErrorCode is the HTTP code returned for type UpdateCronJobInternalServerError
const UpdateCronJobInternalServerErrorCode int = 500

/*UpdateCronJobInternalServerError update cron job internal server error

swagger:response updateCronJobInternalServerError
*/
type UpdateCronJobInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUpdateCronJobInternalServerError creates UpdateCronJobInternalServerError with default headers values
func NewUpdateCronJobInternalServerError() *UpdateCronJobInternalServerError {

	return &UpdateCronJobInternalServerError{}
}

// WithPayload adds the payload to the update cron job internal server error response
func (o *UpdateCronJobInternalServerError) WithPayload(payload interface{}) *UpdateCronJobInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update cron job internal server error response
func (o *UpdateCronJobInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCronJobInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
